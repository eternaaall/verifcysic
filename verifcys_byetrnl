#!/bin/bash

clear
echo
echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
echo "‚ïë     üöÄ Cysic Simple Verifier         ‚ïë"
echo "‚ïë     created by eternaaall           ‚ïë"
echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
echo

WALLET_FILE="$HOME/.cysic_wallet"
SESSION_COUNTER_FILE="$HOME/.cysic_session_counter"

# Load saved wallet or prompt
if [[ -f "$WALLET_FILE" ]]; then
    WALLET=$(cat "$WALLET_FILE")
    echo "üîë Using saved wallet address: $WALLET"
else
    while true; do
        read -p "Enter your EVM wallet address: " WALLET
        if [[ "$WALLET" =~ ^0x[a-fA-F0-9]{40}$ ]]; then
            echo "$WALLET" > "$WALLET_FILE"
            break
        else
            echo "‚ùå Invalid ETH address format. Try again."
        fi
    done
fi

# Dependencies
if [[ ! -f "$HOME/.cysic_apt_installed" ]]; then
    echo "üì¶ Installing dependencies..."
    sudo apt update
    sudo apt install -y screen curl
    touch "$HOME/.cysic_apt_installed"
else
    echo "üì¶ Dependencies already installed."
fi

# Systemd
if [[ ! -f /etc/systemd/system/cysic.service ]]; then
    echo "‚öôÔ∏è Creating systemd service file..."
    sudo bash -c 'cat > /etc/systemd/system/cysic.service <<EOF
[Unit]
Description=Cysic Verifier Node
After=network.target

[Service]
User=root
Group=root
WorkingDirectory=/root/cysic-verifier
Environment="LD_LIBRARY_PATH=/root/cysic-verifier"
Environment="CHAIN_ID=534352"
ExecStart=/root/cysic-verifier/verifier
Restart=always
RestartSec=5

[Install]
WantedBy=multi-user.target
EOF'
fi

# Initial install
if [[ ! -f /root/cysic-verifier/verifier ]]; then
    echo "üìÖ Installing verifier..."
    curl -L https://github.com/cysic-labs/cysic-phase3/releases/download/v1.0.0/setup_linux.sh -o ~/setup_linux.sh
    [[ -f ~/setup_linux.sh ]] && bash ~/setup_linux.sh "$WALLET"
fi

# Auto-increment helper
get_next_session_number() {
    for (( i=0; ; i++ )); do
        NAME="${i}cysic"
        screen -ls | grep -q "\.${NAME}" || { echo "$i"; return; }
    done
}

# Menu loop
while true; do
    echo
    echo "=========== Cysic Verifier Menu ==========="
    echo "1) View status and logs"
    echo "2) Launch a new Verifier"
    echo "3) Update Verifier"
    echo "4) Stop all sessions"
    echo "5) Full Reset + key"
    echo "6) Exit"
    echo "==========================================="
    read -p "Choose option: " OPTION
    echo

    case $OPTION in
        1)
            echo "üñ• Available screen sessions:"
            screen -ls | grep cysic | awk -F '.' '{print "[" $1 "] " $2}'
            read -p "Enter session number to attach (e.g. 1): " NUM
            screen -r "${NUM}cysic"
            ;;
        2)
            read -p "Are you sure you want to launch a new Verifier? (y/n): " CONFIRM
            [[ "$CONFIRM" != "y" ]] && echo "Cancelled." && continue

            NEXT=$(get_next_session_number)
            NAME="${NEXT}cysic"
            LOG="/var/log/${NAME}.log"

            echo "‚ö†Ô∏è Confirm deletion of existing keys (y/n)?"
            read -r CONFIRM_KEY
            [[ "$CONFIRM_KEY" != "y" ]] && echo "Cancelled key removal." && continue
            rm -rf /root/.cysic/keys/

            echo "üöÄ Starting session: $NAME"
            screen -dmS "$NAME" bash -c "cd /root/cysic-verifier && while true; do LD_LIBRARY_PATH=/root/cysic-verifier CHAIN_ID=534352 ./verifier 2>&1 | tee -a $LOG; sleep 5; done"
            ;;
        3)
            read -p "Are you sure you want to update Verifier? (y/n): " CONFIRM
            [[ "$CONFIRM" != "y" ]] && echo "Cancelled." && continue

            read -p "Delete existing keys? (y/n): " CONFIRM_KEYS
            [[ "$CONFIRM_KEYS" == "y" ]] && rm -rf /root/.cysic/keys/

            echo "üîö Stopping all sessions..."
            screen -ls | grep cysic | awk '{print $1}' | cut -d. -f1 | while read -r ID; do
                screen -S "$ID" -X quit
            done

            echo "üßπ Cleaning logs and verifier dir..."
            rm -f /var/log/*cysic.log
            rm -rf /root/cysic-verifier/
            rm -f /root/setup_linux.sh

            echo "üîÑ Re-installing..."
            curl -L https://github.com/cysic-labs/cysic-phase3/releases/download/v1.0.0/setup_linux.sh -o ~/setup_linux.sh
            [[ -f ~/setup_linux.sh ]] && bash ~/setup_linux.sh "$WALLET"
            ;;
        4)
            read -p "This will delete all script data and reset its settings. Continue? (y/n): " CONFIRM
            [[ "$CONFIRM" != "y" ]] && echo "Cancelled." && continue

            echo "üßØ Stopping all sessions and wiping all data..."
            screen -ls | grep cysic | awk '{print $1}' | cut -d. -f1 | while read -r ID; do
                screen -S "$ID" -X quit
            done

            rm -f ~/.cysic_wallet
            rm -f ~/.cysic_apt_installed
            rm -f ~/.cysic_session_counter
            rm -f /var/log/*cysic.log
            rm -rf /root/cysic-verifier/
            rm -f /root/setup_linux.sh
            rm -f /etc/systemd/system/cysic.service

            echo "‚úÖ Full wipe complete."
            ;;
        5)
            read -p "This will also delete your keys. Continue? (y/n): " CONFIRM
            [[ "$CONFIRM" != "y" ]] && echo "Cancelled." && continue

            screen -ls | grep cysic | awk '{print $1}' | cut -d. -f1 | while read -r ID; do
                screen -S "$ID" -X quit
            done
            rm -f /var/log/*cysic.log
            rm -rf /root/.cysic/keys/
            echo "üßº Full reset complete."
            ;;
        6)
            echo "üëã Bye!"
            exit 0
            ;;
        *)
            echo "‚ùå Invalid option."
            ;;
    esac
done
